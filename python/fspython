#!/usr/bin/env bash

# check for freesurfer home
[ ! -e "$FREESURFER_HOME" ] && echo "error: freesurfer has not been properly sourced" && exit 1

# point to freesurfer-installed packages and make sure that PYTHONPATH is entirely
# overwritten, since we don't want any user packages to interfere with things.
# Allow this to be overridden with the FS_LOCAL_PYTHONPATH env var
if [ -z "$FS_LOCAL_PYTHONPATH" ]; then
  export PYTHONPATH="${FREESURFER_HOME}/python/packages"
else
  export PYTHONPATH="${FS_LOCAL_PYTHONPATH}:${FREESURFER_HOME}/python/packages"
  echo "fspython local path #@# ======================================"
  echo fspython PYTHONPATH $PYTHONPATH  # echo for documentation
fi

# do a setenv FS_PYTHON_DEBUG 1 to turn this on for easier debugging
if [ ! -z "$FS_PYTHON_DEBUG" ]; then
  if [ ! $FS_PYTHON_DEBUG -eq 0 ]; then
    echo "Starting fspython #@# ======================================"
    echo ${FREESURFER_HOME}/python/bin/python3 
    printenv
  fi
fi

# futhermore, prevent local user packages from being accessed in fspython
# since we want a very isolated environment
export PYTHONNOUSERSITE=1
unset PYTHONUSERBASE

# don't check for pip upgrades, since it confuses people
export PIP_DISABLE_PIP_VERSION_CHECK=1

# run python
if [ -e "${FREESURFER_HOME}/python/bin/python3" ]; then
    exec ${FREESURFER_HOME}/python/bin/python3 "$@"
else
    echo "error: fspython has not been configured correctly - \$FREESURFER_HOME/python/bin/python3 does not exist"
    exit 1
fi
